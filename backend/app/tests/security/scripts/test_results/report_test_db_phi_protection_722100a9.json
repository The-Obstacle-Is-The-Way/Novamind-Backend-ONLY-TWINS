{"created": 1744671643.810888, "duration": 0.29691410064697266, "exitcode": 1, "root": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/backend", "environment": {}, "summary": {"passed": 6, "failed": 1, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "app/tests/security/db/test_db_phi_protection.py", "type": "Module"}]}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection", "outcome": "passed", "result": [{"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_data_encryption_at_rest", "type": "Function", "lineno": 357}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_role_based_access_control", "type": "Function", "lineno": 391}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_patient_data_isolation", "type": "Function", "lineno": 443}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_audit_logging", "type": "Function", "lineno": 465}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_phi_filtering_by_role", "type": "Function", "lineno": 500}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_transaction_rollback_on_error", "type": "Function", "lineno": 533}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_phi_in_query_parameters", "type": "Function", "lineno": 550}]}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py", "outcome": "passed", "result": [{"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection", "type": "Class"}]}], "tests": [{"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_data_encryption_at_rest", "lineno": 357, "outcome": "passed", "keywords": ["test_data_encryption_at_rest", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.0015331250033341348, "outcome": "passed", "stdout": "Loaded test environment variables from: /Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/backend/.env.test\n"}, "call": {"duration": 0.00017149996710941195, "outcome": "passed"}, "teardown": {"duration": 7.916695903986692e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_role_based_access_control", "lineno": 391, "outcome": "passed", "keywords": ["test_role_based_access_control", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.00016558298375457525, "outcome": "passed"}, "call": {"duration": 0.0002181250019930303, "outcome": "passed"}, "teardown": {"duration": 5.3791969548910856e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_patient_data_isolation", "lineno": 443, "outcome": "passed", "keywords": ["test_patient_data_isolation", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.00017120799748227, "outcome": "passed"}, "call": {"duration": 0.0001397079904563725, "outcome": "passed"}, "teardown": {"duration": 5.1875016652047634e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_audit_logging", "lineno": 465, "outcome": "passed", "keywords": ["test_audit_logging", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.0001681669964455068, "outcome": "passed"}, "call": {"duration": 0.00013195897918194532, "outcome": "passed"}, "teardown": {"duration": 4.979100776836276e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_phi_filtering_by_role", "lineno": 500, "outcome": "failed", "keywords": ["test_phi_filtering_by_role", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.0001522079692222178, "outcome": "passed"}, "call": {"duration": 0.0001621670089662075, "outcome": "failed", "crash": {"path": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/backend/app/tests/security/db/test_db_phi_protection.py", "lineno": 530, "message": "AttributeError: 'NoneType' object has no attribute 'first_name'"}, "traceback": [{"path": "db/test_db_phi_protection.py", "lineno": 530, "message": "AttributeError"}], "longrepr": "self = <test_db_phi_protection.TestDBPHIProtection object at 0x112c4deb0>\ndb = <test_db_phi_protection.Database object at 0x11292d810>\n\n    def test_phi_filtering_by_role(self, db):\n        \"\"\"Test that PHI fields are filtered based on user role.\"\"\"\n        admin_repo = PatientRepository(db.get_session(), user_context={\"role\": \"admin\", \"user_id\": \"A12345\"})\n        doctor_repo = PatientRepository(db.get_session(), user_context={\"role\": \"doctor\", \"user_id\": \"D12345\"})\n        nurse_repo = PatientRepository(db.get_session(), user_context={\"role\": \"nurse\", \"user_id\": \"N12345\"})\n        patient_repo = PatientRepository(db.get_session(), user_context={\"role\": \"patient\", \"user_id\": \"P12345\"})\n        guest_repo = PatientRepository(db.get_session(), user_context={\"role\": \"guest\", \"user_id\": None})\n    \n        # Admin and Doctor should see all decrypted PHI\n        admin_patient = admin_repo.get_by_id(\"P12345\")\n        doctor_patient = doctor_repo.get_by_id(\"P12345\")\n        assert admin_patient.ssn == \"123-45-6789\"\n        assert doctor_patient.ssn == \"123-45-6789\"\n        assert admin_patient.email == \"john.doe@example.com\"\n        assert doctor_patient.email == \"john.doe@example.com\"\n    \n        # Nurse should see most PHI, but SSN redacted\n        nurse_patient = nurse_repo.get_by_id(\"P12345\")\n        assert nurse_patient.ssn == \"XXX-XX-XXXX\"\n        assert nurse_patient.email == \"john.doe@example.com\"\n        assert nurse_patient.phone == \"555-123-4567\"\n    \n        # Patient should see their own decrypted PHI\n        patient_patient = patient_repo.get_by_id(\"P12345\")\n        assert patient_patient.ssn == \"123-45-6789\"\n        assert patient_patient.email == \"john.doe@example.com\"\n    \n        # Guest should see redacted fields\n        guest_patient = guest_repo.get_by_id(\"P12345\")\n>       assert guest_patient.first_name == \"[REDACTED]\"\nE       AttributeError: 'NoneType' object has no attribute 'first_name'\n\ndb/test_db_phi_protection.py:530: AttributeError"}, "teardown": {"duration": 9.833305375650525e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_transaction_rollback_on_error", "lineno": 533, "outcome": "passed", "keywords": ["test_transaction_rollback_on_error", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.0002300830092281103, "outcome": "passed"}, "call": {"duration": 0.000276208040304482, "outcome": "passed"}, "teardown": {"duration": 5.666696233674884e-05, "outcome": "passed"}}, {"nodeid": "app/tests/security/db/test_db_phi_protection.py::TestDBPHIProtection::test_phi_in_query_parameters", "lineno": 550, "outcome": "passed", "keywords": ["test_phi_in_query_parameters", "TestDBPHIProtection", "test_db_phi_protection.py", "db", "security", "tests", "app", "backend", ""], "setup": {"duration": 0.0003647499834187329, "outcome": "passed"}, "call": {"duration": 0.00023137504467740655, "outcome": "passed"}, "teardown": {"duration": 0.00010379101149737835, "outcome": "passed"}}], "warnings": [{"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/backend/app/core/config.py", "lineno": 51}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/backend/app/core/config.py", "lineno": 68}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Using extra keyword arguments on `Field` is deprecated and will be removed. Use `json_schema_extra` instead. (Extra keys: 'env'). Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/fields.py", "lineno": 1076}, {"message": "Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/", "category": "PydanticDeprecatedSince20", "when": "collect", "filename": "/Users/ray/Desktop/GITHUB/Novamind-Backend-ONLY-TWINS/venv_py313/lib/python3.13/site-packages/pydantic/_internal/_config.py", "lineno": 323}]}