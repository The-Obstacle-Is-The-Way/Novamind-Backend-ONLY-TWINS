name: Novamind Digital Twin Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:
    inputs:
      test_type:
        description: 'Type of tests to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - unit
          - integration
          - security

jobs:
  standalone-tests:
    name: Standalone Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
      
      - name: Run standalone tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          export TESTING=1
          export ENVIRONMENT=testing
          python -m pytest app/tests/standalone/ -v
      
      - name: Store standalone test results
        uses: actions/upload-artifact@v3
        with:
          name: standalone-test-results
          path: backend/standalone-test-results.xml
          retention-days: 7

  database-tests:
    name: Database Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: novamind_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          # Ensure async database drivers are installed
          pip install asyncpg>=0.28.0 aiosqlite>=0.19.0
      
      - name: Create test .env file
        run: |
          cat > .env.test << EOF
          TESTING=1
          ENVIRONMENT=testing
          POSTGRES_SERVER=localhost
          POSTGRES_USER=test_user
          POSTGRES_PASSWORD=test_password
          POSTGRES_DB=novamind_test
          SECRET_KEY=test_secret_key_for_ci
          EOF
      
      - name: Run database tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          export TESTING=1
          export ENVIRONMENT=testing
          export POSTGRES_SERVER=localhost
          export POSTGRES_USER=test_user
          export POSTGRES_PASSWORD=test_password
          export POSTGRES_DB=novamind_test
          python -m pytest app/tests/core app/tests/domain app/tests/infrastructure -v
      
      - name: Store database test results
        uses: actions/upload-artifact@v3
        with:
          name: database-test-results
          path: backend/database-test-results.xml
          retention-days: 7

  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    needs: [database-tests]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: novamind_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install asyncpg>=0.28.0 aiosqlite>=0.19.0
      
      - name: Run API tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          export TESTING=1
          export ENVIRONMENT=testing
          export POSTGRES_SERVER=localhost
          export POSTGRES_USER=test_user
          export POSTGRES_PASSWORD=test_password
          export POSTGRES_DB=novamind_test
          python -m pytest app/tests/api -v
      
      - name: Store API test results
        uses: actions/upload-artifact@v3
        with:
          name: api-test-results
          path: backend/api-test-results.xml
          retention-days: 7

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety pytest pytest-cov
      
      - name: Run security tests
        run: |
          # Run Bandit for security linting
          bandit -r app/ -f json -o security-report.json
          
          # Check dependencies for vulnerabilities
          safety check -r requirements.txt -r requirements-dev.txt -r requirements-test.txt --json > safety-report.json
          
          # Run HIPAA compliance checks
          python -m pytest app/tests/security -v
      
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            backend/security-report.json
            backend/safety-report.json
          retention-days: 7

  coverage:
    name: Test Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    needs: [standalone-tests, database-tests, api-tests]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: novamind_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt
          pip install asyncpg>=0.28.0 aiosqlite>=0.19.0
      
      - name: Generate coverage report
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)
          export TESTING=1
          export ENVIRONMENT=testing
          export POSTGRES_SERVER=localhost
          export POSTGRES_USER=test_user
          export POSTGRES_PASSWORD=test_password
          export POSTGRES_DB=novamind_test
          pytest --cov=app --cov-report=xml:coverage.xml --cov-report=html:coverage_html app/tests/
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: unittests
          fail_ci_if_error: false
      
      - name: Store coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: backend/coverage_html/
          retention-days: 7