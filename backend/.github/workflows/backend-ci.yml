name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  code-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          
      - name: Run style checks
        run: |
          flake8 app
          black --check app
          isort --check-only --profile black app
          
      - name: Run type checks
        run: |
          mypy app

  standalone-tests:
    name: Standalone Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          
      - name: Run standalone tests
        run: |
          python scripts/run_tests.py --standalone --coverage
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: standalone-coverage
          path: backend/coverage_html/standalone_tests
          
  venv-tests:
    name: VENV Tests
    runs-on: ubuntu-latest
    needs: standalone-tests
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt
          
      - name: Run VENV tests
        run: |
          python scripts/run_tests.py --venv --coverage
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: venv-coverage
          path: backend/coverage_html/venv_tests

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: venv-tests
    defaults:
      run:
        working-directory: ./backend
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install -r requirements-test.txt
          
      - name: Run migrations
        run: |
          alembic upgrade head
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
          
      - name: Run integration tests
        run: |
          python scripts/run_tests.py --integration --coverage
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v3
        with:
          name: integration-coverage
          path: backend/coverage_html/integration_tests

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-security.txt
          
      - name: Run security scans
        run: |
          bandit -r app -f html -o security-report.html
          safety check -r requirements.txt -r requirements-dev.txt
          
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            backend/security-report.html